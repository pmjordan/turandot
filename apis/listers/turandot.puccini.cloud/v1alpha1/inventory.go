// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/tliron/turandot/resources/turandot.puccini.cloud/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InventoryLister helps list Inventories.
// All objects returned here must be treated as read-only.
type InventoryLister interface {
	// List lists all Inventories in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Inventory, err error)
	// Inventories returns an object that can list and get Inventories.
	Inventories(namespace string) InventoryNamespaceLister
	InventoryListerExpansion
}

// inventoryLister implements the InventoryLister interface.
type inventoryLister struct {
	indexer cache.Indexer
}

// NewInventoryLister returns a new InventoryLister.
func NewInventoryLister(indexer cache.Indexer) InventoryLister {
	return &inventoryLister{indexer: indexer}
}

// List lists all Inventories in the indexer.
func (s *inventoryLister) List(selector labels.Selector) (ret []*v1alpha1.Inventory, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Inventory))
	})
	return ret, err
}

// Inventories returns an object that can list and get Inventories.
func (s *inventoryLister) Inventories(namespace string) InventoryNamespaceLister {
	return inventoryNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InventoryNamespaceLister helps list and get Inventories.
// All objects returned here must be treated as read-only.
type InventoryNamespaceLister interface {
	// List lists all Inventories in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Inventory, err error)
	// Get retrieves the Inventory from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Inventory, error)
	InventoryNamespaceListerExpansion
}

// inventoryNamespaceLister implements the InventoryNamespaceLister
// interface.
type inventoryNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Inventories in the indexer for a given namespace.
func (s inventoryNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Inventory, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Inventory))
	})
	return ret, err
}

// Get retrieves the Inventory from the indexer for a given namespace and name.
func (s inventoryNamespaceLister) Get(name string) (*v1alpha1.Inventory, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("inventory"), name)
	}
	return obj.(*v1alpha1.Inventory), nil
}
